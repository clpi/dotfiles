# cat << EOF > /dev/null
# https://github.com/gpakosz/.tmux
# (‑●‑●)> dual licensed under the WTFPL v2 license and the MIT license,
#         without any warranty.
#         Copyright 2012— Gregory Pakosz (@gpakosz).
# /!\ do not edit this file
#     instead, override settings in ~/.tmux.conf.local, see README.md

#COLORS
#let s:palette = {}
# -- general -------------------------------------------------------------------
set -g default-terminal "screen-256color" # colors!
# set -g default-shell /usr/bin/zsh
setw -g aggressive-resize on
set -g mouse on
setw -g xterm-keys on
set -s escape-time 10                     # faster command sequences
set -sg repeat-time 600                   # increase repeat timeout
set -s focus-events on
#setw -g monitor-activity on
setw -g monitor-activity off
#set -g visual-activity on
set -g visual-activity off
set -g visual-bell off
set -g prefix2 C-a                        # GNU-Screen compatible prefix
# set -g status-style "bg=#100e23, fg=#565575"
set -g status-style "bg=#1b0f2e, fg=#565575"
set -g status-left-style "bg=default, fg=#95ffa4"
set -g status-right-style "bg=default, fg=#565575"
set -g pane-border-style "fg=#565575,bg=default,nobold"
set -g pane-active-border-style "fg=#91ffaa,bg=default,nobold"
set -g message-style "bg=default, fg=#e991f1"
set -g message-command-style "bg=default, fg=#e991f1"
set -g mode-style "bg=default, fg=#e991f1"
set -g status-interval 1
# set -g status-left '#[fg=default,bg=#95ffa4,bold]  #S  #[fg=default,bg=#91ddff,bold] #{window_name}  #{?client_prefix,#[fg=default]#[bg=#e991f1]#[bold] [$_] ,#[bg=default]#[fg=#565575]#[nobold] [$_] }#[fg=default,bg=default,nobold] [#{pane_current_command}]'
set -g status-left '#[bg=#91ffaa,fg=#1e1c31,bold] #S #[bg=#342e4e,fg=#91ffaa]#[bg=#342e4e,fg=#91ffaa] #{window_name}  #[bg=DEFAULT,fg=#342e4e]#{?client_prefix,#[bg=default]#[fg=#ffe9aa]#[bold] $_ ,#[bg=default]#[fg=#565575]#[nobold] $_ }  '
#  
# set -g status-right '#[fg=default,bg=#95ffa4,bold]  #S  #[fg=default,bg=#91ddff,bold] #{window_name}  '
set -g status-right '#[fg=#ffe9aa,bg=DEFAULT]#[bg=DEFAULT,fg=#565575,nobold]  %a #[fg=#342e4e,bg=DEFAULT]#[fg=#91ffaa,bg=#342e4e,nobold] %m/%d #[fg=#91ffaa,bg=#342e4e]#[fg=#1e1c31,bg=#91ffaa, nobold] %H:%M '
#[fg=#96ffa4]#[bg=default]#[nobold] [#(whoami)]
##{pane_current_path}
#set status-left-length 100
set -g window-status-style "fg=#767595, bg=#211c31"
# set -g window-status-current-style "fg=default, bg=#e991f1, nobold"
# set -g window-status-current-style "fg=#e991f1, bg=#19172c, bold"
# set -g window-status-activity-style "fg=#ffe9aa, bg=#19172c"
set -g status-left-length 60
set -g status-right-length 100

set -g status-justify "centre"
# set -g window-status-separator "#[fg=#91ffaa]#[bg=default]#[default]"
# set -g window-status-separator ""
set-window-option -g window-status-format '#[fg=#95ffa4,bg=#19172c] #I #[fg=#565575,bg=#100e23] #W #[fg=#565575,bg=default]#[default]'
# set-window-option -g window-status-current-format '#[bg=#95ffa4,fg=#1e1c31, nobold] #I #[fg=#cbe3e7,bg=#1b1f2f, nobold] #W #[fg=#e991f1,bg=default]#[default]'
# set-window-option -g window-status-current-format '#[fg=#1b0f2e,bg=#95ffa4]#[bg=#95ffa4,fg=#1b0f2e, nobold] #I #[fg=#95ffa4,bg=#342e4e]#[fg=#cbe3e7,bg=#342e4e, nobold] #W #[fg=#342e4e,bg=#1b0f2e]#[default]'
set-window-option -g window-status-current-format '#[bg=#95ffa4,fg=#1b0f2e, nobold] #I #[fg=#95ffa4,bg=#342e4e]#[fg=#cbe3e7,bg=#342e4e, nobold] #W #[fg=#342e4e,bg=#1b0f2e]#[default]'
set -g status on
set -g status-position "bottom"

#set -ga window-status-format ""
#set -ga window-status-current-format " \ "
#set -g window-status-format


bind C-a send-prefix -2
set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
#set -q -g monitor-activity on
#set -q -g visual-activity on
#set -q -g monitor-bell on
setw -q -g utf8 on
set -g history-limit 5000                 # boost history
#set -ga status-right " #(curl icanhaszip.com) "
#set -ga status-right "#[fg=#ffe9aa]#S #I:#P #[fg=#ffe9aa]: %d %b %Y #[fg=green]: %l:%M %p : #(date -u | awk '{print $4}') :"
#set -g status-right "#[fg=blue]#(tmux-cpu --no-color)"
#set -g status-left "#[fg=colour198]: #h : #[fg=brightblue]#(curl icanhazip.com) #(ifconfig en0 | grep 'inet ' | awk '{print \"en0 \" $2}') #(ifconfig en1 | grep 'inet ' | awk '{print \"en1 \" $2}') #(ifconfig en3 | grep 'inet ' | awk '{print \"en3 \" $2}') #(ifconfig tun0 | grep 'inet ' | awk '{print \"vpn \" $2}') "

# edit configuration
bind e new-window -n "~/.tmux.conf.local" "sh -c '\${EDITOR:-vim} ~/.tmux.conf.local && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\"'"
bind v new-window -n "zsh -c \'vw\'"

# reload configuration
#bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'


# -- display -------------------------------------------------------------------

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

#set -g status-interval 10     # redraw status line every 10 seconds

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.1' \; clear-history

# activity


# -- navigation ----------------------------------------------------------------

# create session
bind C-c new-session

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# split current window horizontally
bind - split-window -v
# split current window vertically
bind _ split-window -h

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind -n M-s list-sessions
bind -n M-h select-pane -L
bind -n M-l select-pane -R
bind -n M-k select-pane -U
bind -n M-j select-pane -D
bind -n M-H next-window
bind -n M-L next-window
bind -n M-K previous-window
bind -n M-J next-window
#unbind -n M-h
#unbind -n M-l
#unbind -n M-k
#unbind -n M-j

bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# maximize current pane
bind + run 'cut -c3- ~/.tmux.conf | sh -s _maximize_pane "#{session_name}" #D'

# pane resizing
bind -r H resize-pane -L 4
bind -r J resize-pane -D 4
bind -r K resize-pane -U 4
bind -r L resize-pane -R 4

# window navigation
unbind n
unbind p
bind -r C-h previous-window # select previous window
bind -r C-k previous-window # select previous window
bind -r C-l next-window     # select next window
bind -r C-j next-window     # select next window
bind Tab last-window        # move to last active window

# toggle mouse
bind m run "cut -c3- ~/.tmux.conf | sh -s _toggle_mouse"


# -- urlview -------------------------------------------------------------------

bind U run "cut -c3- ~/.tmux.conf | sh -s _urlview #{pane_id}"


# -- facebook pathpicker -------------------------------------------------------

bind F run "cut -c3- ~/.tmux.conf | sh -s _fpp #{pane_id}"


# -- list choice (tmux < 2.4) --------------------------------------------------

# vi-choice is gone in tmux >= 2.4
run -b 'tmux bind -t vi-choice h tree-collapse 2> /dev/null || true'
run -b 'tmux bind -t vi-choice l tree-expand 2> /dev/null || true'
run -b 'tmux bind -t vi-choice K start-of-list 2> /dev/null || true'
run -b 'tmux bind -t vi-choice J end-of-list 2> /dev/null || true'
run -b 'tmux bind -t vi-choice H tree-collapse-all 2> /dev/null || true'
run -b 'tmux bind -t vi-choice L tree-expand-all 2> /dev/null || true'
run -b 'tmux bind -t vi-choice Escape cancel 2> /dev/null || true'


# -- edit mode (tmux < 2.4) ----------------------------------------------------

# vi-edit is gone in tmux >= 2.4
run -b 'tmux bind -ct vi-edit H start-of-line 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit L end-of-line 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit q cancel 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit Escape cancel 2> /dev/null || true'


# -- copy mode -----------------------------------------------------------------

bind Enter copy-mode # enter copy mode

run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'

#is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    #| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
#bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
#bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
#bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
#tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
#if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    #"bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
#if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    #"bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

#bind-key -T copy-mode-vi 'C-h' select-pane -L
#bind-key -T copy-mode-vi 'C-j' select-pane -D
#bind-key -T copy-mode-vi 'C-k' select-pane -U
#bind-key -T copy-mode-vi 'C-l' select-pane -R
#bind-key -T copy-mode-vi 'C-\' select-pane -l


# -- buffers -------------------------------------------------------------------

bind b list-buffers  # list paste buffers
bind p paste-buffer  # paste from the top paste buffer
bind P choose-buffer # choose which buffer to paste from


# -- user defined overrides ----------------------------------------------------

if '[ -f ~/.tmux.conf.local ]' 'source ~/.tmux.conf.local'


# -- 8< ------------------------------------------------------------------------

#run 'cut -c3- ~/.tmux.conf | sh -s _apply_configuration'
#run -b '[ -z "#{window_active}" ] && [ -z "#{version}" ] && tmux set display-time 3000 \; display "This configuration will soon require tmux >= 2.4" \; set -u display-time || true'

set -g default-terminal "screen-256color"
# set -ga terminal-overrides ",xterm-256color*:Tc"


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'tmux-plugins/tmux-sensible'
#set -g @plugin 'tmux-plugins/tmux-resurrect'
#set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'


#source-file "~/dl/chal/tmux/challenger-deep.tmuxtheme"

set -ga terminal-overrides ",xterm-256color:Tc"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
